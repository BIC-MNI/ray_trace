# CMakeFiles.txt for the bicpl library
#
# Vladimir S. FONOV - vladimir.fonov@gmail.com

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(ray_trace)

#SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake-modules")
# ENABLE_TESTING()
# INCLUDE(CTest)

#ADD_SUBDIRECTORY( doc )

# Packaging defines
SET(CPACK_GENERATOR TGZ)
SET(CPACK_PACKAGE_VERSION_MAJOR 1)
SET(CPACK_PACKAGE_VERSION_MINOR 0)
SET(CPACK_PACKAGE_VERSION_PATCH 40)
INCLUDE(CPack)


SET(PACKAGE "ray_trace")
SET(PACKAGE_BUGREPORT "a.janke@gmail.com")

SET(PACKAGE_NAME "ray_trace")
SET(PACKAGE_VERSION "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}")
SET(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")

FIND_PACKAGE( MINC2 REQUIRED )
FIND_PACKAGE( BICPL REQUIRED )
FIND_PACKAGE( Perl REQUIRED )
FIND_PACKAGE( Threads )
FIND_PACKAGE( GLUT REQUIRED )

INCLUDE( ${MINC2_USE_FILE} )
INCLUDE( ${BICPL_USE_FILE} )

ADD_DEFINITIONS(-DHAVE_CONFIG_H)
ADD_DEFINITIONS(-DUSE_COMPMAT)
ADD_DEFINITIONS(-DUSE_DBLMAT)

# add for building relocatable library
# IF(UNIX)
#   SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
#   SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
# ENDIF(UNIX)

# aliases
SET(VERSION "${PACKAGE_VERSION}")


# check for prereqs
#INCLUDE(CheckFunctionExists)
INCLUDE(CheckIncludeFiles)

# CHECK_FUNCTION_EXISTS(finite   HAVE_FINITE)
# CHECK_FUNCTION_EXISTS(isfinite HAVE_ISFINITE)

CHECK_INCLUDE_FILES(float.h     HAVE_FLOAT_H)
CHECK_INCLUDE_FILES(dlfcn.h     HAVE_FLFCN_H)
CHECK_INCLUDE_FILES(sys/stat.h  HAVE_SYS_STAT_H)
CHECK_INCLUDE_FILES(sys/types.h HAVE_SYS_TYPES_H)
CHECK_INCLUDE_FILES(values.h    HAVE_VALUES_H)
CHECK_INCLUDE_FILES(unistd.h    HAVE_UNISTD_H)
CHECK_INCLUDE_FILES(memory.h    HAVE_MEMORY_H)
CHECK_INCLUDE_FILES(malloc.h    HAVE_MALLOC_H)
CHECK_INCLUDE_FILES(stdlib.h    HAVE_STDLIB_H)
CHECK_INCLUDE_FILES(fcntl.h     HAVE_FCNTL_H)
CHECK_INCLUDE_FILES(vfork.h     HAVE_VFORK_H)
CHECK_INCLUDE_FILES(inttypes.h  HAVE_INTTYPES_H)
CHECK_INCLUDE_FILES(string.h    HAVE_STRING_H)
CHECK_INCLUDE_FILES(strings.h   HAVE_STRINGS_H)

CHECK_INCLUDE_FILES(bicpl/deform.h HAVE_DEFORM_H)

IF(CMAKE_USE_PTHREADS_INIT)
  SET(HAVE_PTHREAD ON)
ELSE(CMAKE_USE_PTHREADS_INIT)
  SET(HAVE_PTHREAD OFF)
ENDIF(CMAKE_USE_PTHREADS_INIT)

IF(WINDOWS)
  CHECK_INCLUDE_FILES(windows.h   HAVE_WINDOWS_H)
ELSE(WINDOWS)
  SET(HAVE_WINDOWS_H OFF)
ENDIF(WINDOWS)

IF(NOT HAVE_DEFORM_H)
  message(FATAL_ERROR "cannot find deform.h - make sure you have bicpl 1.4.0 or later")
ENDIF(HAVE_DEFORM_H)

# others
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/config.h.cmake ${CMAKE_BINARY_DIR}/config.h)
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/epm-header.in ${CMAKE_BINARY_DIR}/epm-header)

INCLUDE_DIRECTORIES( ${CMAKE_BINARY_DIR} Include )



SET(PERL ${PERL_EXECUTABLE})

CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/NUcorrect/field2imp.in ${CMAKE_BINARY_DIR}/field2imp @ONLY)
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/NUcorrect/imp2field.in ${CMAKE_BINARY_DIR}/imp2field @ONLY)
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/NUcorrect/make_template.in  ${CMAKE_BINARY_DIR}/make_template @ONLY)
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/NUcorrect/nu_estimate.in  ${CMAKE_BINARY_DIR}/nu_estimate @ONLY)
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/NUcorrect/nu_estimate_np_and_em.in  ${CMAKE_BINARY_DIR}/nu_estimate_np_and_em @ONLY)
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/NUcorrect/nu_evaluate.in  ${CMAKE_BINARY_DIR}/nu_evaluate @ONLY)
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/NUcorrect/resample_labels.in  ${CMAKE_BINARY_DIR}/resample_labels @ONLY)
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/NUcorrect/sharpen_volume.in ${CMAKE_BINARY_DIR}/sharpen_volume @ONLY)


INSTALL(TARGETS 
 correct_field evaluate_field extracttag sharpen_hist spline_smooth volume_hist volume_stats
  DESTINATION bin)

INSTALL(PROGRAMS
  ${CMAKE_BINARY_DIR}/field2imp
  ${CMAKE_BINARY_DIR}/imp2field
  ${CMAKE_BINARY_DIR}/make_template
  ${CMAKE_BINARY_DIR}/nu_estimate
  ${CMAKE_BINARY_DIR}/nu_estimate_np_and_em
  ${CMAKE_BINARY_DIR}/nu_evaluate
  ${CMAKE_BINARY_DIR}/resample_labels
  ${CMAKE_BINARY_DIR}/sharpen_volume
  PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ  WORLD_EXECUTE WORLD_READ
   DESTINATION bin )

INSTALL(PROGRAMS
  ${CMAKE_BINARY_DIR}/nu_estimate
  PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ  WORLD_EXECUTE WORLD_READ
   DESTINATION bin 
  RENAME nu_correct )


# testing
IF(BUILD_TESTING)
  #ADD_SUBDIRECTORY( testing )
ENDIF(BUILD_TESTING)
